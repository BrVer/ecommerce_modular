# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On macOS with MacPorts:
#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  host: localhost
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: postgres
  password: 123

development:
  primary:
    <<: *default
    database: ecommerce_modular_development
  inventory:
    <<: *default
    database: ecommerce_modular_inventory_development
    migrations_paths: db/inventory_migrate
  orders:
    <<: *default
    database: ecommerce_modular_orders_development
    migrations_paths: db/orders_migrate
  payments:
    <<: *default
    database: ecommerce_modular_payments_development
    migrations_paths: db/payments_migrate


# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  primary:
    <<: *default
    database: ecommerce_modular_test
  inventory:
    <<: *default
    database: ecommerce_modular_inventory_test
    migrations_paths: db/inventory_migrate
  orders:
    <<: *default
    database: ecommerce_modular_orders_test
    migrations_paths: db/orders_migrate
  payments:
    <<: *default
    database: ecommerce_modular_payments_test
    migrations_paths: db/payments_migrate

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: ecommerce_modular_production
  username: ecommerce_modular
  password: <%= ENV['ECOMMERCE_MODULAR_DATABASE_PASSWORD'] %>
